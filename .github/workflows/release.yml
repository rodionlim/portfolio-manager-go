name: Release

on:
  workflow_dispatch: # Trigger workflow manually
    inputs:
      delete_tag:
        description: "Delete tag if exists?"
        type: boolean
        required: false
        default: false

jobs:
  release:
    runs-on: ubuntu-latest

    env:
      SWAG_VERSION: v1.16.4
      GO_VERSION: 1.23.4

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.18.2"

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Install swag
        run: go install github.com/swaggo/swag/cmd/swag@${{ env.SWAG_VERSION }}

      - name: Build
        run: make assets-compress build-cross BUILTIN_ASSETS=1

      - name: Get Version
        id: version
        run: echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT

      - name: Delete tag if exists
        if: ${{ github.event.inputs.delete_tag == 'true' }}
        run: |
          TAG_NAME="v${{ steps.version.outputs.version }}"
          echo "Checking deletion for tag $TAG_NAME"
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            git tag -d "$TAG_NAME"
          else
            echo "Tag $TAG_NAME does not exist"
          fi
          if git ls-remote --exit-code --tags origin "$TAG_NAME" >/dev/null 2>&1; then
            git push origin --delete "$TAG_NAME"
          else
            echo "Tag $TAG_NAME does not exist on remote"
          fi

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          files: portfolio-manager*
          make_latest: true
          draft: false
